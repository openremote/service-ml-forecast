name: Docker Build and Push

on:
  release:
    # Run when a release is published
    types: [published]

  # Run when pushed to main, excluding tags and workflow changes
  push:
    branches:
      - main
      - fix/docker-build
    tags-ignore:
      - '*.*'
    paths-ignore:
      - '**/*.md'

permissions:
  actions: write
  contents: write

jobs:
  # Call ci.yml for linting and running tests
  call-ci:
    name: Run lint and tests
    uses: ./.github/workflows/ci.yml

  # Build and push docker image
  docker-build-and-push:
    name: Build and push docker image
    needs: call-ci
    runs-on: ubuntu-latest
    env:
      PLATFORM: linux/amd64,linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Set tags for docker image using the release tag or fallback to develop if no tag is provided
      # If no tag is provided the latest git tag is used and passed to the docker build command
      - name: Set tags
        id: set-tags
        run: |
          if [ -z "$TAG" ]; then
            echo "TAG=-t openremote/service-ml-forecast:develop" >> $GITHUB_ENV
            echo "dockerImage=openremote/service-ml-forecast:develop" >> $GITHUB_OUTPUT
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            DEV_VERSION="${LATEST_TAG}-dev"
            echo "VERSION=$DEV_VERSION" >> $GITHUB_ENV
          else
            echo "TAG=-t openremote/service-ml-forecast:latest -t openremote/service-ml-forecast:$TAG" >> $GITHUB_ENV
            echo "dockerImage=openremote/service-ml-forecast:$TAG" >> $GITHUB_OUTPUT
            echo "VERSION=$TAG" >> $GITHUB_ENV
          fi
        env:
          TAG: ${{ github.event.release.tag_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Install buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: latest
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push images
        run: |
          docker build --build-arg GIT_COMMIT=${{ github.sha }} --build-arg VERSION=$VERSION --push --platform $PLATFORM $TAG -f docker/Dockerfile .
      # Uncomment to enable anchore scan (repository must have code security enabled)
      # - name: Scan docker image
      #   uses: anchore/scan-action@3343887d815d7b07465f6fdcd395bd66508d486a # v3
      #   id: anchore-scan
      #   with:
      #     image: ${{ steps.set-tags.outputs.dockerImage }}
      #     fail-build: false
      #     severity-cutoff: critical

      # - name: Upload Anchore scan SARIF report
      #   if: ${{ !cancelled() }}
      #   uses: github/codeql-action/upload-sarif@e488e3c8239c26bf8e6704904a8cb59be658d450 # v3
      #   with:
      #     sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
